<?php

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Pay2
 * @package Pay2_Pix
 * @copyright Copyright (c) 2022 NobleCommerce
 * @author NobleCommerce <hello@noblecommerce.io>
 *
 * See LICENSE.md for license details.
 */

declare(strict_types=1);

namespace Pay2\Pix\Gateway\Request\Builder;

use Magento\Payment\Gateway\Data\PaymentDataObjectInterface;
use Magento\Payment\Gateway\Request\BuilderInterface;
use Magento\Sales\Model\Order\Payment;

class Payer implements BuilderInterface
{

    /**
     * @inheritDoc
     */
    public function build(array $buildSubject)
    {
        /** @var PaymentDataObjectInterface $paymentDataObject */
        $paymentDataObject = $buildSubject['payment'];

        /** @var Payment $payment */
        $payment = $paymentDataObject->getPayment();
        $order = $payment->getOrder();

        $name = implode(' ', [
            $order->getCustomerFirstname(),
            $order->getCustomerMiddlename(),
            $order->getCustomerLastname()
        ]);
        $name = str_replace('  ', ' ', $name);

        $taxId = (string) $order->getCustomerTaxvat();
        $taxId = str_replace(array('.', '/', '-'), '', $taxId);

        $address = $order->getBillingAddress();
        $street = $address->getStreet();

        $postCode = (string) $address->getPostcode();
        $postCode = str_replace('-', '', $postCode);

        if( !$taxId && $address->getVatId() ){
            $taxId = (string) $address->getVatId();
            $taxId = str_replace(array('.', '/', '-'), '', $taxId);
        }

        $data = [
            'payer' => [
                'name' => $name,
                'email' => $order->getCustomerEmail(),
                'tax_id' => $taxId,
                'address' => [
                    'street' => $street[0],
                    'number' => $street[1],
                    'complement' => isset($street[3]) ? $street[3] : '',
                    'neighborhood' => isset($street[2]) ? $street[2] : '',
                    'city' => $address->getCity(),
                    'state' => $address->getRegionCode(),
                    'postal_code' => $postCode
                ]
            ]
        ];

        return $data;
    }
}
