<?php

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Pay2
 * @package Pay2_Pix
 * @copyright Copyright (c) 2022 NobleCommerce
 * @author NobleCommerce <hello@noblecommerce.io>
 *
 * See LICENSE.md for license details.
 */

declare(strict_types=1);

namespace Pay2\Pix\Plugin\Sales\Model\Order\Payment\State;

use Magento\Sales\Api\Data\OrderInterface;
use Magento\Sales\Api\Data\OrderPaymentInterface;
use Magento\Sales\Model\Order;
use Magento\Sales\Model\OrderPayment;
use Magento\Sales\Model\Order\Payment\State\CommandInterface;
use Pay2\Pix\Model\Checkout\ConfigProvider;

class SetOrderStatus
{

    /**
     * Set pending order status on order place process
     * This is necessary because Magento force the processing status on new orders with authorization
     * @param CommandInterface $subject
     * @param \Closure $proceed
     * @param OrderPayment $payment
     * @param string|float|int $amount
     * @param Order $order
     * @return string
     */
    public function aroundExecute(CommandInterface $subject, \Closure $proceed, OrderPaymentInterface $payment, $amount, OrderInterface $order)
    {
        $result = $proceed($payment, $amount, $order);

        if ($payment->getMethod() !== ConfigProvider::CODE) {
            return $result;
        }

        $orderState = Order::STATE_NEW;
        $orderStatus = $order->getConfig()->getStateDefaultStatus(Order::STATE_NEW);
        // $orderStatus = $payment->getMethodInstance()->getConfigData('order_status');

        if ($order->getState() !== $orderState) {
            $order->setState($orderState);
            $order->setStatus($orderStatus);
        }

        return $result;
    }
}
