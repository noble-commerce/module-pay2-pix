<?php

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Pay2
 * @package Pay2_Pix
 * @copyright Copyright (c) 2022 NobleCommerce
 * @author NobleCommerce <hello@noblecommerce.io>
 *
 * See LICENSE.md for license details.
 */

declare(strict_types=1);

namespace Pay2\Pix\Gateway\Response\Handler;

use Magento\Payment\Gateway\Data\PaymentDataObjectInterface;
use Magento\Payment\Gateway\Response\HandlerInterface;
use Magento\Sales\Api\OrderPaymentRepositoryInterface;
use Magento\Sales\Model\Order\Payment;

class RefundStatus implements HandlerInterface
{

    /**
     * @var OrderPaymentRepositoryInterface
     */
    protected $paymentRepository;

    /**
     * @param \Magento\Sales\Api\OrderPaymentRepositoryInterface $paymentRepository
     */
    public function __construct(
        OrderPaymentRepositoryInterface $paymentRepository
    ) {
        $this->paymentRepository = $paymentRepository;
    }

    /**
     * @param array $handlingSubject
     * @param array $response
     */
    public function handle(array $handlingSubject, array $response)
    {
        /** @var PaymentDataObjectInterface $paymentDataObject */
        $paymentDataObject = $handlingSubject['payment'];

        /** @var Payment $payment */
        $payment = $paymentDataObject->getPayment();

        $data = $response['data']['refund_raw_data']['data']['transactions'][0] ?? [];
        $status = strtoupper($response['data']['status'] ?? '');

        if ($status !== 'REFUNDED') {
            return;
        }

        // Status
        $payment->setAdditionalInformation('status', $status);

        // Transaction information
        $payment->setLastTransId($data['transactionId']);
        $payment->setTransactionId($data['transactionId']);

        $payment->setIsTransactionClosed(true);
        $payment->setShouldCloseParentTransaction(true);

        // Pix information
        $payment->setAdditionalInformation('qr_code_image', '');

        // Response details
        $details = $response['data'];
        unset($details['raw_data']['data']['instantPayment']['generateImage']);
        $payment->setTransactionAdditionalInfo('details', $details);

        $this->paymentRepository->save($payment);
    }
}
