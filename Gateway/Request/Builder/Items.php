<?php

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Pay2
 * @package Pay2_Pix
 * @copyright Copyright (c) 2022 NobleCommerce
 * @author NobleCommerce <hello@noblecommerce.io>
 *
 * See LICENSE.md for license details.
 */

declare(strict_types=1);

namespace Pay2\Pix\Gateway\Request\Builder;

use Magento\Catalog\Helper\Image;
use Magento\Catalog\Model\ProductRepository;
use Magento\Payment\Gateway\Data\PaymentDataObjectInterface;
use Magento\Payment\Gateway\Request\BuilderInterface;
use Magento\Sales\Api\Data\OrderItemInterface;
use Magento\Sales\Model\Order\Payment;

class Items implements BuilderInterface
{

    /**
     * @var ProductRepository
     */
    protected $productRepository;

    /**
     * @var Image
     */
    protected $imageHelper;

    /**
     * @param \Magento\Catalog\Model\ProductRepository $productRepository
     * @param \Magento\Catalog\Helper\Image $imageHelper
     */
    public function __construct(
        ProductRepository $productRepository,
        Image $imageHelper
    ) {
        $this->productRepository = $productRepository;
        $this->imageHelper = $imageHelper;
    }

    /**
     * @inheritDoc
     */
    public function build(array $buildSubject)
    {
        /** @var PaymentDataObjectInterface $paymentDataObject */
        $paymentDataObject = $buildSubject['payment'];

        /** @var Payment $payment */
        $payment = $paymentDataObject->getPayment();
        $order = $payment->getOrder();

        $items = [];

        /** @var OrderItemInterface $item */
        foreach ($order->getAllVisibleItems() as $item) {

            /** @var \Magento\Catalog\Model\Product $product */
            $product = $this->productRepository->get($item->getSku());
            $image = $this->imageHelper->init($product, 'product_page_image_small');
            $image->setImageFile($product->getThumbnail());

            $items[] = [
                'id' => $item->getSku(),
                'name' => $item->getName(),
                'quantity' => $item->getQtyOrdered(),
                'sale_price' => $item->getPrice(),
                'image' => $image->getUrl(),
            ];
        }

        $data = [
            'items' => $items
        ];

        return $data;
    }
}
